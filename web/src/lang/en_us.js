export default {
  baseStyle: {
    title: 'BaseStyle',
    background: 'Background',
    color: 'Color',
    image: 'Image',
    imageRepeat: 'Image repeat',
    imagePosition: 'Image position',
    imageSize: 'Image size',
    line: 'Line',
    width: 'Width',
    style: 'Style',
    lineRadius: 'Radius',
    lineOfOutline: 'Line of outline',
    showArrow: 'Is show arrow',
    nodePadding: 'Node padding',
    nodeMargin: 'Node margin',
    horizontal: 'Horizontal',
    vertical: 'Vertical',
    maximumWidth: 'Max width',
    maximumHeight: 'Max height',
    icon: 'Icon',
    size: 'Size',
    level2Node: 'Level2 node',
    belowLevel2Node: 'Below level2 node',
    nodeBorderType: 'Node border style',
    nodeUseLineStyle: 'Use only has bottom border style',
    otherConfig: 'Other config',
    associativeLine: 'Associative line',
    associativeLineWidth: 'Width',
    associativeLineColor: 'Color',
    associativeLineActiveWidth: 'Active width',
    associativeLineActiveColor: 'Active color',
    rootStyle: 'Root Node',
    associativeLineText: 'Associative line text',
    fontFamily: 'Font family',
    fontSize: 'Font size',
    rootLineStartPos: 'Root line start pos',
    center: 'Center',
    edge: 'Edge',
    rainbowLines: 'Rainbow lines',
    notUseRainbowLines: 'Not use rainbow lines',
    outerFramePadding: 'Outer frame padding',
    associativeLineStyle: 'Associative line style',
    builtInBackgroundImage: 'Built in background image'
  },
  setting: {
    title: 'Setting',
    openPerformance: 'Enable performance mode',
    enableFreeDrag: 'Enable node free drag(Beta)',
    isEnableNodeRichText: 'Enable node rich text editing',
    mousewheelAction: 'Mouse wheel behavior',
    zoomView: 'Zoom view',
    moveViewUpDown: 'Move view up and down',
    mousewheelZoomActionReverse: 'Mouse Wheel Zoom',
    mousewheelZoomActionReverse1: 'Zoom out forward and zoom in back',
    mousewheelZoomActionReverse2: 'Zoom in forward and zoom out back',
    createNewNodeBehavior: 'Behavior of creating new node',
    default: 'Active new node and editing',
    notActive: 'Not active new node',
    activeOnly: 'Only active new node but not editing',
    openRealtimeRenderOnNodeTextEdit:
      'Enable real-time rendering effect for text editing',
    isShowScrollbar: 'Is show scrollbar',
    isUseHandDrawnLikeStyle: 'Is use hand drawn like style',
    isUseMomentum: 'Is open drag momentum',
    openBlankMode: 'Is open blank mode of the demonstrate',
    watermark: 'Watermark',
    showWatermark: 'Is show watermark',
    onlyExport: 'Only export',
    watermarkDefaultText: 'Watermark text',
    watermarkText: 'Watermark text',
    watermarkTextColor: 'Text color',
    watermarkLineSpacing: 'Line spacing',
    watermarkTextSpacing: 'Text spacing',
    watermarkAngle: 'Angle',
    watermarkTextOpacity: 'Text opacity',
    watermarkTextFontSize: 'Font size',
    belowNode: 'Display below nodes',
    alwaysShowExpandBtn: 'Always show expand btn',
    enableAutoEnterTextEditWhenKeydown: 'Auto enter text edit when keydown',
    confirm: 'Confirm',
    cancel: 'Cancel',
    changeRichTextTip:
      'This operation will clear all historical modification records and modify the mind map data. Do you want to continue?',
    changeRichTextTip2: 'Do you want to switch to rich text mode?',
    changeRichTextTip3: 'Do you want to switch to non rich text mode?',
    enableDragImport:
      'Is it allowed to directly drag and drop files to the page for import',
    imgTextMargin: 'Node image and text margin',
    textContentMargin: 'Node contents margin',
    enableInheritAncestorLineStyle:
      'Node connection style inherits the style of ancestor nodes',
    enableAi: 'Is enable AI function'
  },
  color: {
    moreColor: 'More color'
  },
  contextmenu: {
    insertSiblingNode: 'Insert sibling node',
    insertChildNode: 'Insert child node',
    insertParentNode: 'Insert parent node',
    insertSummary: 'Insert summary',
    moveUpNode: 'Move up node',
    moveDownNode: 'Move down node',
    deleteNode: 'Delete node',
    deleteCurrentNode: 'Only del cur node',
    copyNode: 'Copy node',
    cutNode: 'Cut node',
    pasteNode: 'Paste node',
    backCenter: 'Back root node',
    expandAll: 'Expand all',
    unExpandAll: 'Un expand all',
    expandTo: 'Expand to',
    arrangeLayout: 'Arrange layout',
    level1: 'Level1',
    level2: 'Level2',
    level3: 'Level3',
    level4: 'Level4',
    level5: 'Level5',
    level6: 'Level6',
    zenMode: 'Zen mode',
    fitCanvas: 'Fit canvas',
    removeImage: 'Remove image',
    removeHyperlink: 'Remove hyperlink',
    removeNote: 'Remove note',
    removeCustomStyles: 'Remove custom styles',
    removeAllNodeCustomStyles: 'Remove all node custom styles',
    exportNodeToPng: 'Export node to png',
    copyToClipboard: 'Copy to clipboard',
    copyToSmm: 'SMM',
    copyToJson: 'JSON',
    copyToMarkdown: 'Markdown',
    copyToTxt: 'Txt',
    copyToPng: 'Png',
    copySuccess: 'Copy success',
    copyFail: 'Copy fail',
    number: 'Number child nodes',
    expandNodeChild: 'Expand all sub nodes',
    unExpandNodeChild: 'Un expand all sub nodes',
    addToDo: 'Add toDo',
    removeToDo: 'Remove toDo',
    aiCreate: 'AI Continuation',
    modifyNodeLink: 'Modify node link',
    linkToNode: 'Link to node',
    removeNodeLink: 'Remove node link'
  },
  count: {
    words: 'Words',
    nodes: 'Nodes'
  },
  dialog: {
    cancel: 'Cancel',
    confirm: 'Confirm'
  },
  export: {
    title: 'Export',
    filename: 'Filename',
    include: 'Is include config like theme and structure',
    dedicatedFile: 'Dedicated file',
    jsonFile: 'json file',
    imageFile: 'Image file',
    svgFile: 'svg file',
    pdfFile: 'pdf file',
    markdownFile: 'markdown file',
    isTransparent: 'Background is transparent',
    transformingDomToImages: 'Converting nodes: ',
    notifyTitle: 'Info',
    notifyMessage:
      'If the download is not triggered, check whether it is blocked by the browser',
    paddingX: 'Padding x',
    paddingY: 'Padding y',
    useMultiPageExport: 'Export multi page',
    defaultFileName: 'Mind map',
    addFooterTextPlaceholder: 'For example: From simple-mind-map',
    addFooterText: 'Add text at the footer',
    desc: 'Desc',
    options: 'Options',
    isFitBg:
      'Whether to display the complete background image (effective when a background image is used)',
    format: 'Format',
    confirm: 'Export'
  },
  fullscreen: {
    fullscreenShow: 'Full screen show',
    fullscreenEdit: 'Full screen edit'
  },
  demonstrate: {
    demonstrate: 'Enter demonstration mode'
  },
  import: {
    title: 'Import',
    selectFile: 'Select file',
    support: 'Support',
    file: 'file',
    pleaseSelect: 'Please select',
    maxFileNum: 'At most one file can be selected',
    notSelectTip: 'Please select the file to import',
    fileContentError: 'The file content is incorrect',
    importSuccess: 'Import success',
    fileParsingFailed: 'File parsing failed',
    xmindCanvasSelectDialogTitle: 'Select the canvas to import',
    mdImportDialogTitle: 'Paste Markdown content to import',
    mdPlaceholder: 'Please enter the content in Markdown format',
    mdEmptyTip: 'The content cannot be empty'
  },
  navigatorToolbar: {
    openMiniMap: 'Open mini map',
    closeMiniMap: 'Close mini map',
    readonly: 'Change to Readonly',
    edit: 'Change to edit',
    backToRoot: 'Back to root node',
    changeSourceCodeEdit: 'Switch to source code editing mode',
    shortcutKeys: 'Shortcut keys',
    ai: 'AI dialogue',
    downloadClient: 'Download client',
    site: 'Official website',
    current: 'Current:',
    downloadDesc: 'You can download it from the following address:'
  },
  nodeHyperlink: {
    title: 'Link',
    link: 'Href',
    name: 'Name'
  },
  nodeIcon: {
    title: 'Icon'
  },
  nodeImage: {
    title: 'Image',
    imgTitle: 'Title'
  },
  nodeNote: {
    title: 'Note'
  },
  nodeTag: {
    title: 'Tag',
    addTip: 'Press Enter to add'
  },
  outline: {
    title: 'Outline',
    nodeDefaultText: 'Branch node',
    print: 'Print',
    fullscreen: 'Fullscreen'
  },
  scale: {
    zoomIn: 'Zoom in',
    zoomOut: 'Zoom out'
  },
  shortcutKey: {
    title: 'Shortcut key'
  },
  strusture: {
    title: 'Strusture'
  },
  style: {
    title: 'Node style',
    normal: 'Normal',
    active: 'Active',
    text: 'Text',
    fontFamily: 'Font family',
    fontSize: 'Font size',
    color: 'color',
    addFontWeight: 'add font weight',
    italic: 'Italic',
    textDecoration: 'Text decoration',
    underline: 'Underline',
    none: 'None',
    lineThrough: 'Line through',
    overline: 'Overline',
    border: 'Border',
    style: 'Style',
    width: 'Width',
    borderRadius: 'Border radius',
    background: 'Background',
    shape: 'Shape',
    line: 'Line',
    nodePadding: 'Node padding',
    horizontal: 'Horizontal',
    vertical: 'Vertical',
    gradientStyle: 'Gradient',
    startColor: 'Start',
    endColor: 'End',
    arrowDir: 'Arrow dir',
    arrowDirStart: 'Start',
    arrowDirEnd: 'End',
    direction: 'Direction',
    selectNodeTip: 'Please select a node',
    openLineFlow: 'Open line flow',
    lineFlowDuration: 'Line flow duration',
    forward: 'Forward',
    reverse: 'Reverse',
    img: 'Image',
    placement: 'Placement',
    top: 'Top',
    bottom: 'Bottom',
    left: 'Left',
    right: 'Right',
    tag: 'Tag'
  },
  theme: {
    title: 'Theme',
    classics: 'Classics',
    dark: 'Darkness',
    simple: 'Simple',
    coverTip:
      'You have currently customized the basic style, do you want to overwrite it?',
    tip: 'Tip',
    cover: 'Cover',
    reserve: 'Reserve'
  },
  toolbar: {
    undo: 'Undo',
    redo: 'Redo',
    painter: 'Painter',
    topic: 'Topic',
    subTopic: 'Sub Topic',
    siblingNode: 'Sibling Node',
    childNode: 'Child Node',
    deleteNode: 'Delete Node',
    image: 'Image',
    icon: 'Icon',
    link: 'Link',
    note: 'Note',
    tag: 'Tag',
    summary: 'Summary',
    associativeLine: 'Associative Line',
    formula: 'Formula',
    outerFrame: 'Outer Frame',
    annotation: 'Annotation',
    ai: 'AI',
    more: 'More',
    directory: 'Directory',
    newFile: 'New',
    newFileTip: 'New File',
    openFile: 'Open',
    openFileTip: 'Open File',
    saveAs: 'Save As',
    import: 'Import',
    export: 'Export'
  },
  
  github: {
    configTitle: 'GitHub Configuration',
    token: 'Access Token',
    tokenPlaceholder: 'Please enter GitHub personal access token',
    tokenTip: 'Requires repo permissions to access private repositories',
    owner: 'Repository Owner',
    ownerPlaceholder: 'Please enter repository owner username',
    repo: 'Repository Name',
    repoPlaceholder: 'Please enter repository name',
    branch: 'Branch',
    branchPlaceholder: 'Please enter branch name',
    path: 'File Path',
    pathPlaceholder: 'Please enter file storage path, e.g. mind-map.json',
    autoSave: 'Auto Save',
    autoSaveTip: 'When enabled, files will be automatically saved to GitHub periodically',
    autoSaveInterval: 'Auto Save Interval',
    seconds: 'seconds',
    cancel: 'Cancel',
    save: 'Save',
    configSaved: 'GitHub configuration saved'
  },
  
  other: {
    loading: 'Loading...',
    saveSuccess: 'Save Success',
    saveFailed: 'Save Failed',
    saveTip: 'The file has been saved to the browser\'s local storage. If you want to save it for a long time, please export it as a file',
    exportTip: 'The current browser does not support the export function. It is recommended to use Chrome browser',
    fullscreenTip: 'The current browser does not support the full screen function. It is recommended to use Chrome browser',
    fullscreenZoomTip: 'Cannot zoom in full screen mode, please exit full screen mode first',
    fullscreenToolbarTip: 'Cannot operate the toolbar in full screen mode, please exit full screen mode first',
    fullscreenSidebarTip: 'Cannot operate the sidebar in full screen mode, please exit full screen mode first',
    fullscreenMindMapTip: 'Cannot operate the mind map in full screen mode, please exit full screen mode first',
    fullscreenNodeTip: 'Cannot operate the node in full screen mode, please exit full screen mode first',
    fullscreenNodeImageTip: 'Cannot operate the node image in full screen mode, please exit full screen mode first',
    fullscreenNodeIconTip: 'Cannot operate the node icon in full screen mode, please exit full screen mode first',
    fullscreenNodeLinkTip: 'Cannot operate the node link in full screen mode, please exit full screen mode first',
    fullscreenNodeNoteTip: 'Cannot operate the node note in full screen mode, please exit full screen mode first',
    fullscreenNodeTagTip: 'Cannot operate the node tag in full screen mode, please exit full screen mode first',
    fullscreenNodeSummaryTip: 'Cannot operate the node summary in full screen mode, please exit full screen mode first',
    fullscreenNodeAssociativeLineTip: 'Cannot operate the node associative line in full screen mode, please exit full screen mode first',
    fullscreenNodeFormulaTip: 'Cannot operate the node mathematical formula in full screen mode, please exit full screen mode first',
    fullscreenNodeOuterFrameTip: 'Cannot operate the node outer frame in full screen mode, please exit full screen mode first',
    fullscreenNodeAnnotationTip: 'Cannot operate the node annotation in full screen mode, please exit full screen mode first',
    fullscreenNodeAiTip: 'Cannot operate the AI function in full screen mode, please exit full screen mode first'
  }
}
